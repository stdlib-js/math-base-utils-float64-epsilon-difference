{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reldiff = require( '@stdlib/math-base-utils-relative-difference' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar MAX_FLOAT64 = require( '@stdlib/constants-float64-max' );\nvar EPS = require( '@stdlib/constants-float64-eps' );\n\n\n// VARIABLES //\n\nvar MAX_DIFF = MAX_FLOAT64 * EPS;\n\n\n// MAIN //\n\n/**\n* Computes the relative difference in units of double-precision floating-point epsilon.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @param {(string|Function)} [scale='max-abs'] - scale function\n* @returns {number} relative difference in units of double-precision floating-point epsilon\n*\n* @example\n* var d = epsilonDifference( 12.15, 12.149999999999999 ); // => ~0.658ε\n* // returns ~0.658\n*\n* @example\n* var d = epsilonDifference( 2.4341309458983933, 2.4341309458633909, 'mean-abs' ); // => ~64761.5ε => ~1.438e-11\n* // returns ~64761.5\n*\n* @example\n* function scale( x, y ) {\n*      // Return the minimum value:\n*      return ( x > y ) ? y : x;\n* }\n*\n* var d = epsilonDifference( 1.0000000000000002, 1.0000000000000100, scale ); // => ~44ε\n* // returns ~44\n*/\nfunction epsilonDifference( x, y, scale ) {\n\tvar d = reldiff( x, y, scale || 'max-abs' );\n\n\t// If `d` is `NaN` or `+infinity`, nothing we can do...\n\tif ( isnan( d ) || d === PINF ) {\n\t\treturn d;\n\t}\n\t// If `d >= MAX_VALUE`, we will overflow, as `EPS <<< 1`. To prevent overflow, we cap out at the maximum double-precision floating-point number...\n\tif ( d >= MAX_DIFF ) {\n\t\treturn MAX_FLOAT64;\n\t}\n\t// Return the answer to the question: how many EPS increments is the relative difference?\n\treturn d / EPS;\n}\n\n\n// EXPORTS //\n\nmodule.exports = epsilonDifference;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the relative difference in units of double-precision floating-point epsilon.\n*\n* @module @stdlib/math-base-utils-float64-epsilon-difference\n*\n* @example\n* var epsdiff = require( '@stdlib/math-base-utils-float64-epsilon-difference' );\n*\n* var d = epsdiff( 12.15, 12.149999999999999 ); // => ~0.658ε\n* // returns ~0.658\n*\n* d = epsdiff( 2.4341309458983933, 2.4341309458633909, 'mean-abs' ); // => ~64761.5ε => ~1.438e-11\n* // returns ~64761.5\n*\n* function scale( x, y ) {\n*      // Return the minimum value:\n*      return ( x > y ) ? y : x;\n* }\n*\n* d = epsdiff( 1.0000000000000002, 1.0000000000000100, scale ); // => ~44ε\n* // returns ~44\n*/\n\n// MODULES //\n\nvar epsdiff = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = epsdiff;\n"],"names":["reldiff","require$$0","isnan","require$$1","PINF","require$$2","MAX_FLOAT64","require$$3","EPS","require$$4","MAX_DIFF","lib","x","y","scale","d"],"mappings":";;8cAsBA,IAAIA,EAAUC,EACVC,EAAQC,EACRC,EAAOC,EACPC,EAAcC,EACdC,EAAMC,EAKNC,EAAWJ,EAAcE,EAgD7B,IC7BAG,EDWA,SAA4BC,EAAGC,EAAGC,GACjC,IAAIC,EAAIf,EAASY,EAAGC,EAAGC,GAAS,WAGhC,OAAKZ,EAAOa,IAAOA,IAAMX,EACjBW,EAGHA,GAAKL,EACFJ,EAGDS,EAAIP"}